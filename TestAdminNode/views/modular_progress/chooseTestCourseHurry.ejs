<!DOCTYPE html>
<html>
<% include ../layout/header.ejs %>
<style type="text/css">
    .blockleft {
        width: 45%;
        float: left;
    }

    .blockright {
        width: 54%;
        float: right;
    }

    .demoTable {
        width: 100%;
    }
</style>
<body>
<div class="cBody">
    <div class="blockleft">
        <div class="layui-btn-group demoTable">

        </div>
        <div style="clear: both;"></div>
        <table class="layui-hide" id="tab" lay-filter="tb"></table>
    </div>
    <div class="blockright">
        <div class="layui-btn-group demoTable">
        </div>
        <div style="width: 70%;text-align: start" class="layui-inline">
            <button class="layui-btn" data-type="hurryUp">催单</button>
            <div class="layui-input-inline">
                <input class="layui-input" style="float:right;" name="search" id="search" autocomplete="off" placeholder="关键词检索">
                
            </div>
            <button class="layui-btn"  data-type="reload">搜索</button>
        </div>
        <div style="clear: both;"></div>
        <table class="layui-hide" id="tab1" lay-filter="tb1"></table>
    </div>
</div>
</body>
<% include ../layout/footer.ejs %>
<script>
    href("", "任务管理", "项目文件", "")
    //角色下拉
    var delegateNum = '<%= delegateNum %>'
    layui.extend({
        hurryUp: '/progress/hurryUp',
        bindKey:'/bindKey/bindKey'
    })
    layui.use(['form', 'laydate', 'table', 'jquery', 'hurryUp','bindKey'], function () {
        var table = layui.table;
        var form = layui.form;
        var laydate = layui.laydate;
        var $ = layui.jquery;
        var hurryUp = layui.hurryUp;
        var bindKey = layui.bindKey;
        laydate.render({
            elem: '#date'
            , range: true
        });//日期范围
        laydate.render({
            elem: '#date1'
            , range: true
        });//日期范围
        table.on('checkbox(tb)', function (obj) {
            console.info(obj)
        });
        var dirId = ''
        table.on('row(tb)', function (obj) {
            var data = obj.data;
            var that = obj.tr
            console.log(data)
            $(that).siblings().css("background-color", "white")
            $(that).css("background-color", "#ddd")
            dirId = data.id
            filetable(data.subTaskNumber)
        });
        // table.on('row(tb1)',function (obj) {
        //     var $checkbox=$(obj.tr).find("td div.laytable-cell-checkbox div.layui-form-checkbox I");
        //     if ($checkbox.length > 0) {
        //         $checkbox.click();
        //     }
        // })
        // 监听工具条
        table.on('tool(tb1)', function (obj) {
            var data = obj.data;
            console.log(data)
            //console.log(obj)
        //     if (obj.event === 'hurryUp') {
        //         layer.open({
        //             type: 1,
        //             title: '检测项催单1212',
        //             skin: 'layui-layer-rim', //加上边框
        //             area: ['420px', '240px'], //宽高
        //             content: '<textarea class="layui-textarea extra" placeholder="催单备注，选填" style="width:80%;margin:20px auto;" ></textarea>',
        //             btn: ['确定', '取消'],
        //             btn1: function (index) {
        //                 $.ajax({
        //                     url: '/modular_progress/rejectTestCourser?testCourseId=' + data.id + '&opinion=' + $(".extra").val(),
        //                     type: 'GET',
        //                     success: function (res) {
        //                         console.log(res)
        //                         if (res.status == "ok") {
        //                             parent.window.location.href = "/modular_task/reportwriting"
        //                             layer.closeAll();
        //                             parent.layer.closeAll();
        //                         }
        //                     }
        //                 })
        //             },
        //             btn2: function () {
        //             },
        //         });
        //     }
        });
        table.render({
            elem: '#tab',
            url: "/modular_task/listSubTaskUnderDelegate?delegateNum=" + delegateNum,
            cellMinWidth: 10,
            page: true,
            cols: [
                [
                    {
                        field: 'sn',
                        align: 'center',
                        title: '序号',
                        width: "10%"
                    }, {
                    field: 'subTaskNumber',
                    align: 'center',
                    title: '分单号',
                }, {
                    field: 'sampleNumber',
                    align: 'center',
                    title: '样品编号',
                }, {
                    field: 'state',
                    align: 'center',
                    title: '分单状态',
                }]
            ],
            id: 'tabReload',
            response: {
                statusCode: "ok" //重新规定成功的状态码为 200，table 组件默认为 0
            },
            parseData: function (res) { //将原始数据解析成 table 组件所规定的数据
                console.log(res)
                return {
                    "code": res.status, //解析接口状态
                    "msg": res.message, //解析提示文本
                    "count": res.message.total, //解析数据长度
                    "data": res.message.data //解析数据列表
                };
            },
            text: {
                none: '暂无相关数据！'//默认无数据
            },
        });
        window.filetable = function (subTaskNumber) {

                    table.render({
                        elem: '#tab1',
                        url: "/modular_task/listTestCourseUnderSubTask?subTaskNumber=" + subTaskNumber,
                        cellMinWidth: 10,
                        page: true,
                        cols: [
                            [{checkbox: true},
                                {
                                    field: 'sn',
                                    align: 'center',
                                    title: '序号',
                                    width: '10%'
                                }, {
                                field: 'testItem',
                                align: 'center',
                                title: '测试项',
                            }, {
                                field: 'testClause',
                                align: 'center',
                                title: '测试条款',
                            }, {
                                field: 'testStandard',
                                align: 'center',
                                title: '检测依据',
                            }, {
                                field: 'state',
                                align: 'center',
                                title: '状态',
                            }]
                        ],
                        id: 'tabReload1',
                        response: {
                            statusCode: "ok" //重新规定成功的状态码为 200，table 组件默认为 0
                        },
                        parseData: function (res) { //将原始数据解析成 table 组件所规定的数据
                            console.log(res)
                            return {
                                "code": res.status, //解析接口状态
                                "msg": res.message, //解析提示文本
                                "count": res.message.total, //解析数据长度
                                "data": res.message.data //解析数据列表
                            };
                        },
                        text: {
                            none: '暂无相关数据！' //默认无数据
                        },
                    });
        }
        var role
        var keyword
        form.on('select', function (data) {
            console.log(data.value); //得到被选中的值]
            keyword = $('#search').val();
            role = data.value
            table.reload('tabReload', {
                page: {
                    curr: 1 //重新从第 1 页开始
                }
                , where: {
                    role: role,
                    keyword: keyword,
                }
            });
        });
        var ids = []
        table.on('checkbox(tb)', function (obj) {
            ids = []
            var checkStatus = table.checkStatus('tabReload')
                , data = checkStatus.data;
            console.log(data)
            for (var i = 0; i < data.length; i++) {
                ids[i] = data[i].id
            }
            console.log(ids)
        });
        var Ids = []
        table.on('checkbox(tb1)', function (obj) {
            Ids = []
            var checkStatus = table.checkStatus('tabReload1')
                , data = checkStatus.data;
            console.log(data)
            for (var i = 0; i < data.length; i++) {
                Ids[i] = data[i].id
            }
            console.log(Ids)
        });
        var $ = layui.$, active = {
            hurryUp: function () {
                return hurryUp.batchRequestHurryUp(table, Ids, '/modular_progress/testCourseHurryUp');
            },
            reload: function () {
                keyword = $('#search').val();
                //执行重载
                table.reload('tabReload1', {
                    page: {
                        curr: 1 //重新从第 1 页开始
                    }
                    , where: {
                        keyword: keyword,
                    }
                });
            },
            addRole: function () { //获取选中数据
                layer.open({
                    type: 1,
                    title: '新增文件夹',
                    skin: 'layui-layer-rim', //加上边框
                    area: ['420px', '240px'], //宽高
                    content: '<input class="layui-input dirName" placeholder="文件夹名称" style="width:80%;margin:20px auto;" />',
                    btn: ['确定', '取消'],
                    btn1: function (index) {
                        $.ajax({
                            url: '/modular_task/addTaskDir?delegateNum=' + delegateNum + '&dirName=' + $(".dirName").val(),
                            type: 'GET',
                            success: function (res) {
                                console.log(res)
                                if (res.status == "ok") {
                                    layer.close(index);
                                    table.reload('tabReload')
                                } else {
                                    layer.msg(res.message);
                                }
                            }
                        })
                    },
                    btn2: function () {
                        //								alert("2")
                    },
                });
            }
            , delRole: function () {
                //获取选中状态            
                if (ids.length == 0) {
                    layer.msg('批量删除至少选中一项数据', function () {
                    });
                    return false;
                }
                console.log(ids)
                layer.confirm('确定要删除选中的项吗？', function (index) {
                    $.ajax({
                        type: 'post',
                        dataType: "json",
                        url: '/modular_task/removeTaskDir?ids=' + JSON.stringify(ids),
                        success: function (data) {
                            console.log(data)
                            if (data.status == "ok") {
                                table.reload('tabReload', {
                                    page: {
                                        curr: 1
                                    },
                                    where: {
//										page: 1
                                    }
                                });
                            }
                            layer.msg(data.message);
                        }, error: function (code) {
                            parent.layer.msg('操作失败!', {icon: 5, time: 1000});
                        }
                    });
                })
            },
            del: function () {
                //获取选中状态            
                if (Ids.length == 0) {
                    layer.msg('批量删除至少选中一项数据', function () {
                    });
                    return false;
                }
                console.log(Ids)
                layer.confirm('确定要删除选中的项吗？', function (index) {
                    $.ajax({
                        type: 'post',
                        dataType: "json",
                        url: '/modular_task/removeFileArray?ids=' + JSON.stringify(Ids),
                        success: function (data) {
                            console.log(data)
                            if (data.status == "ok") {
                                filetable(dirId)
                            }
                            layer.msg(data.message);
                        }, error: function (code) {
                            parent.layer.msg('操作失败!', {icon: 5, time: 1000});
                        }
                    });
                })
            }

            , upload: function () {
                if (dirId == '') {
                    alert('请选择上传文件的文件夹')
                } else {
                    layer.open({
                        type: 2,
                        title: '文件上传',
                        area: ['800px', '400px'], //宽高
                        content: '/modular_task/addFolder?dirId=' + dirId,
                    });
                }
            }
        };

        $('.layui-btn').on('click', function () {
            var type = $(this).data('type');
            active[type] ? active[type].call(this) : '';
        });
        bindKey.autoBind(active);
    });
</script>

</html>